<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Primary module hooks for Red Properties module.
 */

define('ROLES_ALLOWED_TO_LIST_PROPERTIES', ['tenant', 'administrator']);

/**
 * Implements hook_form_FORM_ID_alter().
 */
function red_properties_form_user_register_form_alter(array &$form, FormStateInterface &$form_state, $form_id): void {
  $form['user_role'] = [
    '#type' => 'select',
    '#options' => array_map('_get_role_label', _get_customer_roles()),
    '#required' => TRUE,
    '#title' => t('What do you want to use this account for?'),
  ];
  $form['actions']['submit']['#submit'][] = 'red_properties_register_submit';
}

/**
 * @return array
 */
function _get_customer_roles(): array {
  $urs = Drupal::entityTypeManager()->getStorage('user_role');
  $role_ids = $urs->getQuery()->condition('label', ['Tenant', 'Landlord'], 'IN')->execute();

  return $urs->loadMultiple($role_ids);
}

/**
 * Get label from role object
 */
function _get_role_label(&$role): string {
  return $role->label();
}

/**
 * Registration custom submit handler to set role.
 */
function red_properties_register_submit(&$form, FormStateInterface &$form_state) {
  $uid = $form_state->getValue('uid');
  $role = $form_state->getValue('user_role');

  $user = \Drupal\user\Entity\User::load($uid);
  $user->addRole($role);
  $user->save();
  // TODO: get this to redirect?
}

/**
 * Implements hook_preprocess_hook() main--menu.
 */
function red_properties_preprocess_menu__main(&$variables) {
  $pattern = "property_listing";
  foreach ($variables['items'] as $idx => $item) {
    if (stripos($item['url']->toString(), $pattern) !== FALSE) {
      if (empty(array_intersect(ROLES_ALLOWED_TO_LIST_PROPERTIES, \Drupal::currentUser()->getRoles()))) {
        unset($variables['items'][$idx]);
      }
    }
  }
}